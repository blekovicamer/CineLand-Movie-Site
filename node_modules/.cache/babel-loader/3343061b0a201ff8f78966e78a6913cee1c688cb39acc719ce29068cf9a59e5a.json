{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0442e3a2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"movie-carousel ml-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"uppercase text-yellow-500 font-semibold text-lg mt-20 ml-2\"\n}, \" Upcoming Movies \", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"movie-carousel-inner flex mb-7\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MovieItem = _resolveComponent(\"MovieItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.upcomingMovies, (movie, i) => {\n    return _openBlock(), _createBlock(_component_MovieItem, {\n      key: i,\n      movie: movie,\n      genres: $data.genres,\n      class: \"mr-6 movie-item-container\"\n    }, null, 8 /* PROPS */, [\"movie\", \"genres\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","upcomingMovies","movie","i","_createBlock","_component_MovieItem","key","genres"],"sources":["C:\\Users\\amerb\\movie-tmbd\\src\\components\\UpcomingMovies.vue"],"sourcesContent":["<template>\r\n    <div class=\"movie-carousel ml-5\">\r\n      <h2 class=\"uppercase text-yellow-500 font-semibold text-lg mt-20 ml-2\">\r\n        Upcoming Movies\r\n      </h2>\r\n      <div class=\"movie-carousel-inner flex mb-7\">\r\n        <MovieItem\r\n          v-for=\"(movie, i) in upcomingMovies\"\r\n          :key=\"i\"\r\n          :movie=\"movie\"\r\n          :genres=\"genres\"\r\n          class=\"mr-6 movie-item-container\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        upcomingMovies: [],\r\n        genres: [], // You'll need to fetch or define the genres data\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchUpcomingMovies();\r\n      this.fetchGenres(); // Add a method to fetch genres data\r\n    },\r\n    methods: {\r\n        async fetchUpcomingMovies() {\r\n  const response = await this.$http.get(\"https://api.themoviedb.org/3/movie/upcoming\");\r\n  console.log(response); // Add this line to check the response\r\n\r\n  this.upcomingMovies = response.data.results.slice(1, 6);\r\n},\r\n      async fetchGenres() {\r\n        // Add code to fetch genres data from the TMDB API\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  \r\n  .movie-carousel {\r\n  overflow-x: auto;\r\n  white-space: nowrap;\r\n  scroll-behavior: smooth;\r\n  background-image: url('@/assets/images/dotsa.png');\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 20px;\r\n  background-color: lightgray; /* Add a temporary background color */\r\n  border: 1px solid black; /* Add a temporary border */\r\n}\r\n\r\n\r\n\r\n.movie-carousel-inner {\r\n  display: flex;\r\n}\r\n\r\n  </style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAqB;gEAC9BC,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAA4D,GAAC,mBAEvE;;EACKA,KAAK,EAAC;AAAgC;;;uBAJ7CE,mBAAA,CAaM,OAbNC,UAaM,GAZJC,UAEK,EACLH,mBAAA,CAQM,OARNI,UAQM,I,kBAPJH,mBAAA,CAMEI,SAAA,QAZVC,WAAA,CAO+BC,KAAA,CAAAC,cAAc,EAP7C,CAOkBC,KAAK,EAAEC,CAAC;yBADlBC,YAAA,CAMEC,oBAAA;MAJCC,GAAG,EAAEH,CAAC;MACND,KAAK,EAAEA,KAAK;MACZK,MAAM,EAAEP,KAAA,CAAAO,MAAM;MACff,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}