{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  class: \"text-gray-400\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_router_link, {\n    to: `/actor/${this.actor.id}`\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"img\", {\n      src: $options.profileImage,\n      alt: \"Actor Image\"\n    }, null, 8 /* PROPS */, _hoisted_1)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"]), _createElementVNode(\"h3\", null, _toDisplayString($props.actor.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_2, _toDisplayString($options.knownFor), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","_component_router_link","to","actor","id","default","_withCtx","_createElementVNode","src","$options","profileImage","alt","_hoisted_1","_","_toDisplayString","$props","name","_hoisted_2","knownFor"],"sources":["C:\\Users\\amerb\\movie-tmbd\\src\\components\\items\\ActorItem.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <router-link :to=\"`/actor/${this.actor.id}`\">\r\n        <img :src=\"profileImage\" alt=\"Actor Image\">\r\n      </router-link>\r\n\r\n      <h3>{{ actor.name }}</h3>\r\n      <p class=\"text-gray-400\">{{knownFor}}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: {\r\n      actor: {\r\n        required: true,\r\n      },\r\n    },\r\n  \r\n    computed: {\r\n      profileImage() {\r\n        const baseUrl = 'https://image.tmdb.org/t/p/w235_and_h235_face';\r\n        const imagePath = this.actor.profile_path || '/default-actor-image.png'; // Replace with your default image path\r\n        return `${baseUrl}${imagePath}`;\r\n      },\r\n      knownFor() {\r\n                let knownStr = \"\"\r\n                for (let i; i < this.actor.known_for.length - 1;i++) {\r\n                    knownStr += this.actor.known_for[i].title;\r\n                }\r\n                return knownStr\r\n  }\r\n}\r\n  }\r\n  </script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";mBAAA;;EAOSA,KAAK,EAAC;AAAe;;;uBAN1BC,mBAAA,CAOM,cANJC,YAAA,CAEcC,sBAAA;IAFAC,EAAE,iBAAiBC,KAAK,CAACC,EAAE;;IAF/CC,OAAA,EAAAC,QAAA,CAGQ,MAA2C,CAA3CC,mBAAA,CAA2C;MAArCC,GAAG,EAAEC,QAAA,CAAAC,YAAY;MAAEC,GAAG,EAAC;4BAHrCC,UAAA,E;IAAAC,CAAA;6BAMMN,mBAAA,CAAyB,YAAAO,gBAAA,CAAlBC,MAAA,CAAAZ,KAAK,CAACa,IAAI,kBACjBT,mBAAA,CAAyC,KAAzCU,UAAyC,EAAAH,gBAAA,CAAdL,QAAA,CAAAS,QAAQ,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}